name: Release Candidate

on:
  push:
    tags:
      - 'v*-rc.*'

env:
  FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-release-candidate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Decode secrets base64
        run: |
          echo "${{ secrets.ENV_DEV }}" | base64 --decode > .env.dev
          echo "${{ secrets.KEY_PROPERTIES }}" | base64 --decode > android/key.properties
          echo "${{ secrets.KEYSTORE }}" | base64 --decode > android/anilist-keystore.jks  

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true
          flutter-version-file: pubspec.yaml

      - run: |
          flutter clean
          flutter pub get

      - name: Generate env
        run: |
          dart run build_runner clean
          dart run build_runner build --delete-conflicting-outputs

      - name: Release
        run: |
          flutter build aab --release --flavor dev --dart-define=FLAVOR=dev --split-debug-info=symbols --obfuscate 
          flutter build apk --release --flavor dev --dart-define=FLAVOR=dev --split-debug-info=symbols --obfuscate

      - name: Setup Firebase CLI
        run: curl -sL https://firebase.tools | bash         

      - name: Upload symbols to Firebase Crashlytics
        run: firebase crashlytics:symbols:upload --app=${{ secrets.FIREBASE_APP_ID_DEV }} symbols

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-dev-release-apk
          path: build/app/outputs/flutter-apk/app-dev-release.apk
          
      - name: Upload AAB as artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-dev-release-aab
          path: build/app/outputs/bundle/devRelease/app-dev-release.aab

  github-prerelease:
    needs: build-release-candidate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create release notes
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B ${GITHUB_SHA})
          echo "NOTES<<EOF" >> $GITHUB_ENV
          echo "$COMMIT_MESSAGE" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: ${{ env.NOTES }}
          draft: false
          prerelease: true

      - name: Download APK artifact
        id: download_apk
        uses: actions/download-artifact@v4
        with:
          name: app-dev-release-apk

      - name: Download AAB artifact
        id: download_aab
        uses: actions/download-artifact@v4
        with:
          name: app-dev-release-aab

      - name: Upload APK to tag
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.download_apk.outputs.download-path }}/app-dev-release.apk
          asset_name: app-dev-release.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload AAB to tag
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.download_aab.outputs.download-path }}/app-dev-release.aab
          asset_name: app-dev-release.aab
          asset_content_type: application/octet-stream
